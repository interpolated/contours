/**
 * identical to atlaskit tree type, but we force string ids
 */
type ItemId = string;
export interface TreeItem<D> {
    id: ItemId;
    children: ItemId[];
    hasChildren?: boolean;
    isExpanded?: boolean;
    isChildrenLoading?: boolean;
    data?: D;
}
export interface TreeItemWithData<D> {
    id: ItemId;
    children: ItemId[];
    hasChildren?: boolean;
    isExpanded?: boolean;
    isChildrenLoading?: boolean;
    data: D;
}
export interface TreeGroupItem {
    id: ItemId;
    children: ItemId[];
    hasChildren: boolean;
    isExpanded?: boolean;
    isChildrenLoading?: boolean;
}
export interface TreeData<TreeItemD> {
    rootId: 'root' | string;
    items: {
        root: TreeItem<any>;
    } & Record<ItemId, TreeItemD>;
}
export {};
