import { ValueOf } from './utils';
interface TFC_CarbonData {
    id: number;
    location: 'Australia' | '';
    scope: null;
    carbon_rating: number;
    gha_per_unit: null;
}
type TFC_Variant_ID = number;
export interface TFC_CarbonVariant {
    carbon_data: TFC_CarbonData[];
    name: string;
    supplier_link: null;
    id: TFC_Variant_ID;
}
export declare const TFC_Detailed_Categories: {
    ST: string;
    FA: string;
    SE: string;
    IF: string;
    OT: string;
};
type BaseBuildingSection = {
    pk: 1536;
    code: 'BB';
    name: 'Base Building Benchmarks';
};
interface TFC_BaseMaterial {
    id: number;
    name: string;
    unit_of_measure: 'm2';
    material_section: {
        pk: number;
        code: string;
        name: string;
    };
    variants: TFC_CarbonVariant[];
}
export interface TFC_DetailedCarbonMaterial extends TFC_BaseMaterial {
    material_section: {
        pk: number;
        code: keyof typeof TFC_Detailed_Categories;
        name: ValueOf<typeof TFC_Detailed_Categories>;
    };
}
export type TFC_CustomFacadeCarbonMaterial = TFC_BaseMaterial;
export interface TFC_ConceptCarbonMaterial {
    name: string;
    material_section: BaseBuildingSection;
}
type DetailedOption = {
    label: string;
    value: TFC_Variant_ID;
};
interface CarbonPropsBase {
    buildingType: string;
}
interface CarbonPropsConcept extends CarbonPropsBase {
    assessmentMode: 'concept';
    concept: TFC_Variant_ID;
}
export interface TFC_Section_Detailed_Props extends CarbonPropsBase {
    assessmentMode: 'detailed';
    detailed: Partial<{
        [Property in keyof typeof TFC_Detailed_Categories]: DetailedOption | DetailedOption[];
    }>;
}
export type TFC_Section_Props = CarbonPropsConcept | TFC_Section_Detailed_Props;
export {};
