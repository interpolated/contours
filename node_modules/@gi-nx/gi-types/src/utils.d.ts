import type { PreStackedLineString, PreStackedPoint, PreStackedPolygon, PreStackedSection, RawLineString, RawPoint, RawPolygon, RawSection, SimplePropertyFilter, StackedPoint, StackedPolygon, StackedSection } from '.';
import { AdvancedFeatureFilter, BooleanTypeFilter, DateTypeFilter, FileTypeFilter, GeometryTypeFilter, NumberTypeFilter, PropertyFilterDefinition, SelectTypeFilter, SimpleOperator, TextTypeFilter } from './filtering';
import { Project } from './projects';
export type ValueOf<T> = T[keyof T];
export type RecursivePartial<T> = {
    [P in keyof T]?: T[P] extends (infer U)[] ? RecursivePartial<U>[] : T[P] extends object ? RecursivePartial<T[P]> : T[P];
};
export declare function getEnumKeys<O extends object, K extends keyof O = keyof O>(obj: O): K[];
export declare function getEnumValues<O extends object, V extends O[keyof O] = O[keyof O]>(obj: O): V[];
/**
 * typeguard for operations that should only be upon a valid, saved project
 */
export declare const isPermanentProject: (projectId: Project['properties']['id']) => projectId is number;
export declare const isNumberFilter: (def: PropertyFilterDefinition) => def is NumberTypeFilter;
export declare const isTextFilter: (def: PropertyFilterDefinition) => def is TextTypeFilter;
export declare const isSelectFilter: (def: PropertyFilterDefinition) => def is SelectTypeFilter;
export declare const isDateFilter: (def: PropertyFilterDefinition) => def is DateTypeFilter;
export declare const isBooleanFilter: (def: PropertyFilterDefinition) => def is BooleanTypeFilter;
export declare const isFileFilter: (def: PropertyFilterDefinition) => def is FileTypeFilter;
export declare const isSimplePropertyFilter: (filter: SimplePropertyFilter | AdvancedFeatureFilter | GeometryTypeFilter) => filter is SimplePropertyFilter;
export declare const isValuelessOperator: (operator: SimpleOperator) => operator is SimpleOperator.Empty | SimpleOperator.NotEmpty;
export declare const isPolySection: (section: RawSection | PreStackedSection | StackedSection) => section is RawPolygon | StackedPolygon | PreStackedPolygon;
export declare const isLineStringSection: (section: RawSection | PreStackedSection | StackedSection) => section is RawLineString | PreStackedLineString;
export declare const isPointSection: (section: RawSection | PreStackedSection | StackedSection) => section is RawPoint | StackedPoint | PreStackedPoint;
export declare const assertNever: (x: any) => void;
