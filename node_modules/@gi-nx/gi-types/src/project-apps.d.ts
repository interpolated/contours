import { CounterFields } from './counter';
import { ProjectId } from './projects';
import { UserDefinedFeatureProperty } from './properties';
import { RecursivePartial } from './utils';
interface ProjectAppBase {
    id: string;
    project: ProjectId;
    app: string;
    appName?: string;
}
export interface OtherProjectApp<FeatureCategories = Record<string, any>, Public = Record<string, any>> extends ProjectAppBase {
    public?: Public;
    private?: Record<string, any>;
    featureCategories?: FeatureCategories;
    mapStyle?: Record<string, any> | Array<Record<string, any>>;
    /**
     * @deprecated
     */
    city?: Record<string, any>;
    /**
     * @deprecated
     */
    readMe?: any;
    /**
     * @deprecated
     */
    opacity?: any;
}
export interface GiraffeProjectApp extends OtherProjectApp {
    public: GiraffePublic;
    featureCategories: GiraffeFeatureCategories;
    version?: string;
}
export type ProjectApp = GiraffeProjectApp | OtherProjectApp;
export interface Usage {
    default: Record<string, any>;
    join: {
        [propName: string]: any;
    };
    geomTypes: Array<string>;
}
export type FeatureCategory = Record<string, {
    default?: Record<string, any>;
    join: {
        [propName: string]: any;
    };
    geomTypes?: Array<string>;
}>;
export interface GiraffeFeatureCategories extends Record<string, FeatureCategory> {
    usage: {
        [usageName: string]: Usage;
    };
    parkingType: FeatureCategory;
    /** * @deprecated */
    markerType: FeatureCategory;
    popup: FeatureCategory;
    mode: FeatureCategory;
    treeSpecies: FeatureCategory;
    setback: FeatureCategory;
}
export type ProjectTerrainSettings = {
    enabled: boolean;
    projectToTerrain: boolean;
    displayMeshOffset: number;
    clipToBoundary: boolean;
};
export interface GiraffePublic {
    counter?: CounterFields;
    propDefs?: Record<string, UserDefinedFeatureProperty>;
    terrain?: ProjectTerrainSettings;
}
export type ValidProjectApps = {
    '1': GiraffeProjectApp;
} & Record<string, OtherProjectApp>;
export type ProjectAppEdits = RecursivePartial<ValidProjectApps>;
export {};
