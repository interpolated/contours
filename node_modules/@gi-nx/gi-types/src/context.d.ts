import { RawSection } from '.';
import { LayerTree } from './layers';
import type { User, WorkspaceDetails } from './membership';
import type { ProjectApp } from './project-apps';
import type { Project } from './projects';
import type { RecursivePartial } from './utils';
export type CrudDatum<Model> = RecursivePartial<Model>;
/**
 * useCrud detects if multiple data and updates many rows in one call if so.
 */
export type CrudData<Model> = CrudDatum<Model> | CrudDatum<Model>[];
export interface AppChoice {
    id: number;
    name: string;
}
export interface AppChoices {
    myApps: AppChoice[];
    orgApps: AppChoice[];
    publicApps: AppChoice[];
}
export interface WorkspaceState {
    /**
     * the boundary edit tool may be separately acting upon a different project to `activeProject`
     */
    projects: {
        [id: string]: Project;
    };
    workspaceDetails?: WorkspaceDetails;
    appOptions: AppChoices | null;
    isAppsLoading: boolean;
}
type ProjectAppOverride = Pick<ProjectApp, 'app'> & Partial<ProjectApp>;
export interface ProjectOverrides {
    sections?: RawSection[];
    projectLayers?: any[];
    projectApps?: ProjectAppOverride[];
    vistas?: any[];
    layerTree?: LayerTree;
}
export type UserT = null | undefined | 'anonymous' | User;
export {};
